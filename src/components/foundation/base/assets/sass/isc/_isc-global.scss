// THEME COLOR PALETTES
/* -----------------------------------------
* Primary Palette (Primary, Secondary, Neutral, Accent)
* Neutral Shades (Neutral Two, Neutral Three, Neutral Splash)
* Typography Palette (Dark Text, Light Text, Header Text, Subtext)
* States (Alert, Success, Warning, Info)
----------------------------------------- */

/* Primary Pallete */
$primary-color: #485163 !default;
$secondary-color: #a7b8d1 !default;
$neutral-color: #ebebeb !default;
$accent-color: #35b2ea !default;

/* Neutral Shades */
$neutral-two: #f1f1f1 !default;
$neutral-three: #f8f8f8 !default;
$neutral-splash: #eef1f6 !default;

/* Typography Pallete */
$dark-text: #424242 !default;
$light-text: #ffffff !default;
$header-text: #546075 !default;
$subtext-color: #b0bbc1 !default;

/* States Pallete */
$success-color: #64B5AA !default;
$alert-color: #db492c !default;
$warning-color: #FB9B5F !default;
$info-color: #B1D5E5 !default;

// For internal use: a color map
$theme-colors: (
  primary: $primary-color,
  secondary: $secondary-color,
  neutral: $neutral-color,
  accent: $accent-color,
  success: $success-color,
  alert: $alert-color,
  warning: $warning-color,
  info: $info-color,
  dark: $dark-color,
  neutral-two: $neutral-two,
  neutral-three: $neutral-three,
  dark-text: $dark-text,
  light-text: $light-text,
  header-text: $header-text,
  subtext: $subtext-color
);

/* --- Grayscale Logic --- */
$gray-10: darken( #fff, 10 );
$gray-20: darken( #fff, 20 );
$gray-30: darken( #fff, 30 );
$gray-40: darken( #fff, 40 );
$gray-50: darken( #fff, 50 );
$gray-60: darken( #fff, 60 );
$gray-70: darken( #fff, 70 );
$gray-80: darken( #fff, 80 );
$gray-90: darken( #fff, 90 );

/* Shadow-Depth Map */
$shadow-depths: (
  '1dp': $shadow-1dp,
  '2dp': $shadow-2dp,
  '3dp': $shadow-3dp,
  '4dp': $shadow-4dp,
  '5dp': $shadow-5dp,
  '6dp': $shadow-6dp,
  '7dp': $shadow-7dp,
  '8dp': $shadow-8dp,
  '9dp': $shadow-9dp,
  '10dp': $shadow-10dp,
  '11dp': $shadow-11dp,
  '12dp': $shadow-12dp,
  '13dp': $shadow-13dp,
  '14dp': $shadow-14dp,
  '15dp': $shadow-15dp,
  '16dp': $shadow-16dp,
  '17dp': $shadow-17dp,
  '18dp': $shadow-18dp,
  '19dp': $shadow-19dp,
  '20dp': $shadow-20dp,
  '21dp': $shadow-21dp,
  '22dp': $shadow-22dp,
  '23dp': $shadow-23dp,
  '24dp': $shadow-24dp
) !default;

// Structure CSS Class Rules
@each $depth, $shadow-depth in $shadow-depths {
  .shadow-#{$depth} {
    box-shadow: $shadow-depth;
  }
}

// Shadow Mixin
@mixin shadow($shadow-depth) {
  $shadow-depth: map-get($shadow-depths, $shadow-depth);
  box-shadow: $shadow-depth;
}

// ANIMATION - TO DO - MOTION UI
/* ------------------------------ */

// Classes to use when triggering in/out animations
$motion-class: (
  in: "ng-enter",
  out: "ng-leave",
) !default;

$motion-class-active: (
  in: "ng-enter-active",
  out: "ng-leave-active",
) !default;

$motion-class-stagger: (
  in: "ng-enter-stagger",
  out: "ng-leave-stagger",
) !default;

$motion-class-showhide: (
  in: "ng-hide-remove",
  out: "ng-hide-add",
) !default;

$motion-class-showhide-active: (
  in: "ng-hide-remove-active",
  out: "ng-hide-add-active",
) !default;

// Set if movement-based transitions should also fade the element in and out
$motion-slide-and-fade: false !default;
$motion-hinge-and-fade: true !default;
$motion-scale-and-fade: true !default;
$motion-spin-and-fade: true !default;

// Default speed for transitions and animations
$motion-duration-default: 500ms !default;

// Slow and fast modifiders
$motion-duration-slow: 750ms !default;
$motion-duration-fast: 250ms !default;
$motion-stagger-duration-default: 150ms !default;
$motion-stagger-duration-short: 50ms !default;
$motion-stagger-duration-long: 300ms !default;

// Default timing function for transitions and animations
$motion-timing-default: ease !default;

// Built-in and custom easing functions
// Every item in this map becomes a CSS class
$motion-timings: (
  linear: linear,
  ease: ease,
  easeIn: ease-in,
  easeOut: ease-out,
  easeInOut: ease-in-out,
  bounceIn: cubic-bezier(0.485, 0.155, 0.240, 1.245),
  bounceOut: cubic-bezier(0.485, 0.155, 0.515, 0.845),
  bounceInOut: cubic-bezier(0.760, -0.245, 0.240, 1.245),
) !default;

// Default delay for all transitions and animations
$motion-delay-default: 0 !default;

//Short and long delay modifiers
$motion-delay-short: 300ms !default;
$motion-delay-long: 700ms !default;

/* Global Language Direction ('ltr', 'rtl' or 'both')
-----------------------------------------------------*/
$global-text-direction: ltr !default;

// Internal variables used for direction
/* -----------------------------------------
* If $global-text-direction: 'ltr', or 'both',
* $global-left is 'left' and $global-right is 'right'.
* If $global-text-direction: rtl, swap them
----------------------------------------- */
$global-left: if($global-text-direction == rtl, right, left);
$global-right: if($global-text-direction == rtl, left, right);

// Internal variables used for (first/last)-child
/* ----------------------------------------------
* If $global-text-direction: 'ltr', or 'both',
* $global-first is 'first' and $global-last is 'last'.
* If $global-text-direction: rtl, swap them
------------------------------------------------ */
$global-first: if($global-text-direction == rtl, last, first);
$global-last: if($global-text-direction == rtl, first, last);

/* Global Styles */
@include exports(global) {

  /* Allow Multi-Page Printing */
  .grid-frame {
    @media #{$print}{
      height: 100%;
    }
  }

  /* Accessibility */
  @media not speech {
    :focus {
      outline: 0;
    }
  }
}
